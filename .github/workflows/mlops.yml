name: MLFlow to Prometheus

on:
  workflow_dispatch:

jobs:
  export_metrics:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r Backend_ML/requirements.txt

      - name: Export metrics from MLFlow to Prometheus
        run: |
          source venv/bin/activate
          cd Backend_ML/app/mlflow || exit 1

          echo "üì° Interrogation de MLFlow..."
          response=$(curl -s -H "Content-Type: application/json" -d '{"max_results": 100}' http://localhost:5000/api/2.0/mlflow/experiments/search)

          if echo "$response" | jq -e '.experiments != null' > /dev/null; then
            echo "‚úÖ R√©ponse valide de MLFlow :"
            echo "$response"

            experiment_ids=$(echo "$response" | jq -r '.experiments[].experiment_id')

            for exp in $experiment_ids; do
              echo "üîç Exp√©rience ID: $exp"
              runs=$(curl -s -H "Content-Type: application/json" \
                -d "{\"experiment_ids\": [\"$exp\"]}" \
                http://localhost:5000/api/2.0/mlflow/runs/search)

              if echo "$runs" | jq -e '.runs != null and (.runs | length > 0)' > /dev/null; then
                run_ids=$(echo "$runs" | jq -r '.runs[].info.run_id')

                for run in $run_ids; do
                  echo "üìä Analyse du run: $run"
                  metrics_response=$(curl -s http://localhost:5000/api/2.0/mlflow/runs/get?run_id=$run)

                  if echo "$metrics_response" | jq -e '.run.data.metrics != null' > /dev/null; then
                    metrics=$(echo "$metrics_response" | jq -r '.run.data.metrics')

                    echo "$metrics" | jq -c 'to_entries[]' | while read -r metric_entry; do
                      key=$(echo "$metric_entry" | jq -r '.key')
                      value=$(echo "$metric_entry" | jq -r '.value')
                      echo "$key{experiment=\"$exp\",run=\"$run\"} $value" \
                        | curl --data-binary @- http://localhost:9091/metrics/job/mlflow_metrics
                    done
                  else
                    echo "‚ö†Ô∏è Aucune m√©trique trouv√©e pour le run $run."
                  fi
                done
              else
                echo "‚ö†Ô∏è Aucun run trouv√© pour l'exp√©rience $exp."
              fi
            done
          else
            echo "‚ùå Erreur dans la r√©ponse de MLFlow lors de la r√©cup√©ration des exp√©riences."
            echo "$response"
            exit 1
          fi
