name: MLFlow and Snakemake Workflow

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  MLFLOW_URL: https://4af2-160-176-233-39.ngrok-free.app

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Set up virtual environment and install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install mlflow prometheus_client snakemake pulp==2.7.0 jq
        shell: bash

      - name: Start Prometheus PushGateway
        run: |
          docker run -d -p 9091:9091 prom/pushgateway
          sleep 5
        shell: bash

      - name: Fetch and push ALL MLFlow metrics to Prometheus
        run: |
          source venv/bin/activate
          echo "üì° Interrogation de MLFlow..."

          # Liste des run_id √† interroger (LSTM, SARIMAX, etc.)
          runs=("40861f35b8dc4f3082d2fcb92a9515c4" "ad0cf78265204f34b84a40aa09895c7f")

          for run in "${runs[@]}"; do
            echo "üîç Analyse du run: $run"

            # R√©cup√©rer les noms de toutes les m√©triques disponibles
            metric_keys=$(curl -s -X GET "$MLFLOW_URL/api/2.0/mlflow/runs/get?run_id=$run" | jq -r '.run.data.metrics | keys[]')

            for key in $metric_keys; do
              metric_response=$(curl -s -X GET "$MLFLOW_URL/api/2.0/mlflow/metrics/get-history?run_id=$run&metric_key=$key")

              if echo "$metric_response" | jq -e '.metrics != null and (.metrics | length > 0)' > /dev/null; then
                value=$(echo "$metric_response" | jq -r '.metrics[0].value')
                echo "‚û°Ô∏è $key: $value"

                # Pousser la m√©trique dans Prometheus avec label "run"
                echo "$key{run=\"$run\"} $value" \
                  | curl --data-binary @- http://localhost:9091/metrics/job/mlflow_and_snakemake_metrics
              else
                echo "‚ö†Ô∏è Aucune valeur trouv√©e pour la m√©trique '$key'"
              fi
            done
          done
        shell: bash

      - name: Push global success metric to Prometheus
        run: |
          echo "success 1" \
            | curl --data-binary @- http://127.0.0.1:9091/metrics/job/mlflow_and_snakemake_metrics
        shell: bash

      - name: Check metrics in PushGateway
        run: |
          echo "üîç V√©rification des m√©triques dans PushGateway..."
          curl -s http://127.0.0.1:9091/metrics | grep -E 'scale|loss|mae|mse|aic|bic|llf|r2_score|rmse|df_model|df_resid|success' || echo "‚ö†Ô∏è Pas de m√©triques visibles"
        shell: bash

      - name: Complete Monitoring
        run: echo "‚úÖ Fin de l'ex√©cution, v√©rification via Grafana et Prometheus"
        shell: bash
