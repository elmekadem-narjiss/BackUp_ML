name: MLFlow and Snakemake Workflow

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  MLFLOW_URL: https://4af2-160-176-233-39.ngrok-free.app

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Set up virtual environment and install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install mlflow prometheus_client snakemake pulp==2.7.0 jq
        shell: bash

      - name: Start Prometheus PushGateway
        run: |
          docker run -d -p 9091:9091 prom/pushgateway
          sleep 5
        shell: bash

      - name: Fetch and push MLFlow metrics to Prometheus
        run: |
          source venv/bin/activate
          echo "üì° Interrogation de MLFlow..."
          
          # Fetch the specific run IDs
          runs=("40861f35b8dc4f3082d2fcb92a9515c4" "ad0cf78265204f34b84a40aa09895c7f")
          for run in "${runs[@]}"; do
            echo "üîç Analyse du run: $run"
            # Fetch the metrics for the specific run using get-history API
            metric_response=$(curl -s -X GET "$MLFLOW_URL/api/2.0/mlflow/metrics/get-history?run_id=$run&metric_key=scale")
            
            # Check if the response contains the correct metric data
            if echo "$metric_response" | jq -e '.metrics != null and (.metrics | length > 0)' > /dev/null; then
              scale_value=$(echo "$metric_response" | jq -r '.metrics[0].value')
              echo "Valeur de la m√©trique 'scale' pour le run $run : $scale_value"
              # Changer le nom du job ici
              echo "scale{run=\"$run\"} $scale_value" \
                | curl --data-binary @- http://localhost:9091/metrics/job/mlflow_and_snakemake_metrics
            else
              echo "‚ö†Ô∏è Aucune m√©trique 'scale' trouv√©e pour le run $run."
            fi
          done
        shell: bash

      - name: Push global success metric to Prometheus
        run: |
          echo "success 1" | curl --data-binary @- http://127.0.0.1:9091/metrics/job/mlflow_and_snakemake_metrics
        shell: bash

      - name: Check metrics in PushGateway
        run: |
          echo "V√©rification des m√©triques dans PushGateway..."
          if curl -s http://127.0.0.1:9091/metrics | grep -q 'mlflow_and_snakemake_metrics'; then
            echo "‚úÖ Les m√©triques sont pr√©sentes dans PushGateway."
          else
            echo "‚ùå Aucune m√©trique trouv√©e dans PushGateway."
          fi
        shell: bash

      - name: Complete Monitoring
        run: echo "‚úÖ Fin de l'ex√©cution, v√©rification via Grafana et Prometheus"
        shell: bash
